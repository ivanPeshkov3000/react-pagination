{"version":3,"sources":["Pagination.js","App.js","reportWebVitals.js","index.js"],"names":["PaginationContainer","initialState","pagesCount","currentPage","pageSize","totalItemsCount","Data","length","data","currentChunkData","useReducer","state","action","type","value","slice","upd","size","count","Math","ceil","current","curData","floor","collator","Intl","Collator","numeric","orderBy","order","sortedData","sort","a","b","compare","filteredData","filter","row","JSON","stringify","indexOf","Error","dispatch","PaginationPureComponent","className","placeholder","onChange","ev","target","PageList","activePage","handle","val","SelectSize","optionValues","defaultValue","TableOfData","handleSort","col","ord","options","map","columns","reduce","keys","emerge","Object","prop","push","tHead","forEach","column","data-column","onClick","parentNode","childNodes","child","dataset","toUpperCase","items","item","trContent","undefined","toString","id","_id","i","page","Number","attributes","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.643f4d88.chunk.js","sourcesContent":["import { useReducer } from \"react\";\nimport './Pagination.css';\nimport Data from './MOCK_DATA.json';\n\n\nexport default function PaginationContainer() {\n  const initialState = {\n    pagesCount: 1,\n    currentPage: 1,\n    pageSize: 20,\n    totalItemsCount: Data.length,\n    data: Data,\n    currentChunkData: []\n  }\n  \n  const [state, dispatch] = useReducer(reducer, initialState, init);\n\n  function init(state) {\n    return {\n      ...state,\n      pagesCount: Math.ceil(state.totalItemsCount / state.pageSize),\n      currentChunkData: state.data.slice(state.pageSize * (state.currentPage - 1), state.pageSize * state.currentPage)\n    }\n  }\n\n  function reducer(state, action) {\n    switch (action.type) {\n      case 'setPage':\n        return {\n          ...state,\n          currentPage: action.value,\n          currentChunkData: state.data.slice(state.pageSize * (action.value - 1), state.pageSize * action.value)\n        }\n      case 'resizePage':\n        const upd = {\n          size: action.value,\n          count: Math.ceil(state.totalItemsCount / action.value),\n          current: 0,\n          curData: []\n        }\n        upd.current = state.pagesCount < upd.count\n          ? Math.floor(state.currentPage / state.pagesCount * upd.count)\n          : Math.ceil(state.currentPage / state.pagesCount * upd.count);\n\n        upd.curData = state.data.slice(upd.size * (upd.current - 1), upd.size * upd.current);\n\n        return {\n          ...state,\n          pageSize: upd.size,\n          pagesCount: upd.count,\n          currentPage: upd.current,\n          currentChunkData: upd.curData\n        }\n      case 'sortData':\n        const collator = new Intl.Collator(['en', 'ru'], { numeric: true });\n        const orderBy = action.order;\n        const sortedData = state.data.slice().sort((a, b) => orderBy * collator.compare(a[action.value], b[action.value]));\n        return {\n          ...state,\n          data: sortedData,\n          currentChunkData: sortedData.slice(state.pageSize * (state.currentPage - 1), state.pageSize * state.currentPage)\n        }\n      case 'filterData':\n        const filteredData = Data.filter(row => JSON.stringify(row).indexOf(action.value) !== -1)\n        return {\n          ...state,\n          data: filteredData,\n          totalItemsCount: filteredData.length,\n          currentPage: 1,\n          pagesCount: Math.ceil(filteredData.length / state.pageSize),\n          currentChunkData: filteredData.slice(0, state.pageSize)\n        }\n      default:\n        throw new Error();\n    }\n  }\n  return (\n    <PaginationPureComponent state={state} dispatch={dispatch} />\n  )  \n}\n\nfunction PaginationPureComponent({state, dispatch}) {\n  return (\n    <div className=\"Pagination\">\n      <header className=\"header\">\n        <input className=\"search-input\" placeholder=\"Enter name of property\" onChange={ev => dispatch({ type: \"filterData\", value: ev.target.value })} />\n      </header>\n      <main className=\"main\">\n        <PageList pagesCount={state.pagesCount} activePage={state.currentPage} handle={val => dispatch({ type: \"setPage\", value: val })} />\n        <div className=\"page-sizing\">\n          <span className=\"description-pagesize\">\n            Количество строк:\n          </span>\n          <SelectSize optionValues={[10, 20, 35, 50]} defaultValue={state.pageSize} handle={val => dispatch({ type: \"resizePage\", value: val })} />\n        </div>\n        <TableOfData data={state.currentChunkData} handleSort={(col, ord) => dispatch({ type: \"sortData\", value: col, order: ord })} />\n        <PageList pagesCount={state.pagesCount} activePage={state.currentPage} handle={val => dispatch({ type: \"setPage\", value: val })} />\n      </main>\n    </div>\n  );\n}\n\n/**********************************\n * Меню изменения размера страницы\n**********************************/\nfunction SelectSize({ optionValues, handle, defaultValue = 20 }) {\n  const options = optionValues.map(value => {\n    return ( <option key={value}>{value}</option> )\n  });\n\n  return (\n    <select className=\"select-pagesize\" defaultValue={defaultValue} onChange={ev => handle(ev.target.value)}>\n      {options}\n    </select>\n  )\n}\n\n/*****************************\n * Таблица с данными\n*****************************/\nfunction TableOfData({ data, handleSort }) {\n  if (!data || !data.length) return (\n    <span className=\"empty-table\">No matches</span>\n  )\n  const columns = data.reduce((keys, row) => {\n      const rowKeys = Object.keys(row);\n      const emerge = rowKeys.filter(prop => keys.indexOf(prop) < 0);\n\n      if (emerge) keys.push(...emerge)\n      return keys;\n    },\n    Object.keys(data[0])\n  );\n\n  function checkOrder(target) {\n    target.parentNode.childNodes.forEach(child => {\n      child !== target\n        ? (child.dataset.order = \"\")\n        : (target.dataset.order = -child.dataset.order || 1)\n    });\n  };\n  const tHead = [];\n  columns.forEach(column => {\n    tHead.push(\n      <td\n        key={column}\n        data-column={column}\n        onClick={\n          ev => {\n            checkOrder(ev.target);\n            handleSort(ev.target.dataset.column, ev.target.dataset.order)\n          }\n        }\n      >\n        {column.toUpperCase()}\n      </td>)\n  });\n\n  const items = data.map((item) => {\n    const trContent = [];\n\n    columns.forEach(column => {\n      trContent.push(\n        <td key={column + item.id}>\n          {item[column] !== undefined ? item[column].toString() : <span className=\"empty\">Empty</span>}\n        </td>\n      )\n    })\n\n    return (\n      <tr key={item._id}>{trContent}</tr>\n    )\n  });\n\n  return (\n    <div className=\"table-container\">\n      <table className=\"info-table\">\n        <thead>\n          <tr>\n            {tHead}\n          </tr>\n        </thead>\n        <tbody>\n          {items}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\n/*****************************\n * Блок навигации по страницам\n*****************************/\nfunction PageList({pagesCount = 2, activePage = 1, handle = () => {}}) {\n  const items = [];\n\n  for (let i = 1; i <= pagesCount; i++) {\n    items.push(<li key={i} page={i} className={i === Number(activePage) ? \"active\" : \"\"} onClick = {ev => handle(ev.target.attributes.page.value)}>{i}</li>);\n  }\n\n  return (\n    <ol className = \"pagelist\">\n      {items}\n    </ol>\n  )\n}\n\n\n","import './App.css';\nimport Pagination from \"./Pagination\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Pagination />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}